
import terminal
import "color.adept"
import "Message.adept"

class adept\Output () {
    constructor {}

    virtual func send(_message adept\Message) {}
    virtual func getTimeline() *<adept\Message> List = null
}

class adept\TerminalOutput extends adept\Output () {
    constructor {}
    
    override func send(message adept\Message){
        exhaustive switch message.kind {
        case ::NONE
            print(message.content)
        case ::ERROR
            color\red()
            place("[error] ")
            color\reset()
            print(message.content)
        case ::WARNING
            color\yellow()
            place("[warning] ")
            color\reset()
            print(message.content)
        case ::INFO
            color\blue()
            place("[info] ")
            color\reset()
            print(message.content)
        case ::ICON
            color\use(::LIGHT_BLUE)
            printf("     /▔▔\\\n");
            printf("    /    \\\n");
            printf("   /      \\\n");
            printf("  /   /\\   \\        %S\n", message.content);
            printf(" /   /\\__   \\\n");
            printf("/___/    \\___\\\n\n");
            color\reset()
        }
    }
}

class adept\CapturedOutput extends adept\Output (timeline <adept\Message> List) {
    constructor {}

    override func send(message adept\Message){
        this.timeline.add(message).make()
    }

    override func getTimeline() *<adept\Message> List {
        return &this.timeline
    }
}
