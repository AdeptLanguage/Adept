# Overall Things for Adept 2.5

HIGH-PRIORITY:

MEDIUM-PRIORITY:
* alignof expression
* allow '+=', '-=', etc. with definitions of '__add__', '__subtract__', etc.
* way to allow using defined expressions and/or meta expressions for fixed array counts
    ```
    // This holds polygon B expressed in frame A.
    struct Whatever (
        vertices /* b2_maxPolygonVertices */ 8 b2Vec2,
        normals /* b2_maxPolygonVertices */ 8 b2Vec2,
        count int
    )


    struct Whatever (
        vertices #(b2_maxPolygonVertices) b2Vec2,
        normals #(b2_maxPolygonVertices) b2Vec2,
        count int,
        max_capacity #get max_capacity b2Vec2
    )
    ```
* negate '-' operator
* 'each-in' loops with custom 'idx' name
    ```
    each object Object in objects using object_idx {
        
    }
    ```
* 'break default' to break to default condition of switch statement
* nodiscard
* __return__ and return POD
* records
* easy and consistent constructors

LOW-PRIORITY:
* Finish 'Any'
    * Casting to Any from non-builtin types
* __assign__ auto-generation
* __assign__ for fixed arrays maybe
* Allow polymorphic names for generic bases
* Add full linux cross-compilation support
* Make 'typeinfo' work better with aliases and '*void'
* Add way to manually invoke DEINIT_SVARS
* Maybe add support for methods on non-struct types, e.g. toString(this *$#N $T) String,  toString(this *int),  toUnique(this *ubyte) <ubyte> Unique,  etc.
* Unconditional blocks (like: if true {}, except with 'if true' part)
* Specify default value arguments by name (e.g - captLoadTexturesByFieldName(this, assetsFolder: where(), approximateByDefault: true) )
* 'adept install https://github.com/IsaacShelton/Box2D'
* conditionless blocks
* match/when statement or something like that

v2.5 COMPLETED:
+ anonymous structures and unions
+ typenameof expression
+ embed
+ 'repeat' loops with custom 'idx' name
+ add '\0'ub and make sure other '\0' forms exist
+ add support for 'thing1().thing2().thing3()' statements

v2.4 COMPLETED:
+ Standard Library Imports
+ [] operator overload
+ Better var args support
+ Ensure that trying to use variadic arguments without __variadic_array__ defined, fails smoothly
+ Better constants syntax
+ Scoped constants
+ ~> operator
+ __as__
+ implicit vs explicit __as__
+ __initializer_list__
+ Replace 'const a = 0' with 'declare a = 0'
+ Allow for '*void' as an alternative to 'ptr'

v2.5 COMPLETED:
+ anonymous fields (with structures and unions)
+ fill in runtime type information for complex composite types
