
import 'sys/cstdio.adept'
import 'sys/cstring.adept'

func main(in argc int, in argv **ubyte) int {
    marker ubyte
    player int = 1
    x, y, winner int = 0
    board *ubyte = new ubyte * 9
    defer delete board

    memset(board, 0x5F, sizeof ubyte * 9)

    while winner == 0 {
        print_board(board)

        taken bool = true; while taken {
            x_valid bool = false; until x_valid {
                printf('\nEnter x coordinate for player %d (ranging from 1-3): ', player)
                scanf('%d', &x)
                if x < 1 || x > 3, printf('Number must be within range 1 to 3\n')
                else x_valid = true
            }

            y_valid bool = false; until y_valid {
                printf('\nEnter y coordinate for player %d (ranging from 1-3): ', player)
                scanf('%d', &y)
                if y < 1 || y > 3, printf('Number must be within range 1 to 3\n')
                else y_valid = true
            }

            if board[(y - 1) * 3 + x - 1] != 0x5F, printf('That spot is taken, enter different coordinates\n')
            else taken = false
        }

        if player == 1, marker = 0x78
        else marker = 0x6F

        board[(y - 1) * 3 + x - 1] = marker

        full bool = true; i usize = 0; while i != 9 {
            if board[i] == 0x5F, full = false
            i += 1
        }

        // 8 possible ways to win
        if      did_win(board, marker, 0, 1, 2), winner = player
        else if did_win(board, marker, 3, 4, 5), winner = player
        else if did_win(board, marker, 6, 7, 8), winner = player
        else if did_win(board, marker, 0, 3, 6), winner = player
        else if did_win(board, marker, 1, 4, 7), winner = player
        else if did_win(board, marker, 2, 5, 8), winner = player
        else if did_win(board, marker, 0, 4, 8), winner = player
        else if did_win(board, marker, 6, 4, 2), winner = player

        if full and winner == 0, printf('\nGame resulted in statemate!\n'); return 0
        else if player == 1, player = 2 else player = 1

        if winner != 0 {
            printf('\nPlayer %d wins!\n', winner)
            print_board(board)
            printf('\nDo you want to play again? (y|n): ')
            getchar() // Pass over entered newline character
            if getchar() == 0x79, winner = 0; player = 1; memset(board, 0x5F, sizeof ubyte * 9)
        }
    }
    return 0
}

func did_win(board *ubyte, marker ubyte, a int, b int, c int) bool {
    return board[a] == marker && board[b] == marker && board[c] == marker
}

func print_board(board *ubyte) void {
    printf('%c  %c  %c\n%c  %c  %c\n%c  %c  %c\n', board[0], board[1], board[2],
        board[3], board[4], board[5], board[6], board[7], board[8])
}
